name: Build, Push & sign Docker image

on:
  push:
    branches: ["**"]       
  pull_request:            

env:
  REGISTRY:  ${{ secrets.REGISTRY_URL }}
  NAMESPACE: crypto                           

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read         
      packages: write         
      id-token: write

    steps:
    - uses: actions/checkout@v4
      with: { fetch-depth: 0 }

    - name: set tags
      id: ver
      shell: bash
      run: |
        set -euo pipefail

        NEW_LINE=$(tr -d ' \n' < VERSION)       
        IMAGE_NAME=${NEW_LINE%%:*}
        NEW_VER=${NEW_LINE#*:}

        FINAL_TAG="${IMAGE_NAME}:${NEW_VER}"
        FULL_IMAGE="${{ env.REGISTRY }}/${{ env.NAMESPACE }}/${FINAL_TAG}"

        echo "FINAL_TAG=$FINAL_TAG"   >>"$GITHUB_ENV"
        echo "FULL_IMAGE=$FULL_IMAGE" >>"$GITHUB_ENV"
        echo "image=$FULL_IMAGE"      >>"$GITHUB_OUTPUT"

    - uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - uses: docker/setup-buildx-action@v3

    - name: Build and push image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ env.FULL_IMAGE }}
        cache-from: type=gha
        cache-to:   type=gha,mode=max

    - uses: sigstore/cosign-installer@v3
      with:
        cosign-release: "v2.5.0"
    
    - name: Sign image (keyless OIDC)
      env:
        COSIGN_EXPERIMENTAL: "1"
      run: |
        cosign sign --yes --recursive ${{ env.FULL_IMAGE }}
    
    - name: Verify signature
      env:
        COSIGN_EXPERIMENTAL: "1"
      run: |
        EXPECTED_ID="https://github.com/${{ github.workflow_ref }}"
        cosign verify \
          --certificate-identity     "$EXPECTED_ID" \
          --certificate-oidc-issuer  "https://token.actions.githubusercontent.com" \
          "${{ env.FULL_IMAGE }}"
